set(MN_MEDIA_INCLUDE_DIR "${CMAKE_CURRENT_SOURCE_DIR}")
if(WIN32)
set(MN_MEDIA_ARTIFACTS_DIR "${CMAKE_SOURCE_DIR}/LocalArtifactDir/artifacts")
else()
set(MN_MEDIA_ARTIFACTS_DIR "${CMAKE_SOURCE_DIR}/LocalArtifactDir/artifacts_linux")
endif()

set(CMAKE_LIBRARY_ARCHITECTURE "x64")
set(CMAKE_BUILD_TYPE "Debug")

set(MN_MEDIA_LIB mn-media)
set(MN_MEDIA_SHARED_LIB mn-media-shared)

set(MN_MEDIA_EXPORT_HEADER_BASE_NAME mn-media)
set(MN_MEDIA_NO_EXPORT_DEFINE MN_MEDIA_LIBRARY_NO_EXPORT)

file(GLOB_RECURSE MN_MEDIA_HEADERS MN_MEDIA_SOURCES ${MN_MEDIA_INCLUDE_DIR}/*.h ${MN_MEDIA_INCLUDE_DIR}/*.cpp)
file(GLOB_RECURSE MN_MEDIA_HEADERS_DECODERS MN_MEDIA_SOURCES_DECODERS ${MN_MEDIA_INCLUDE_DIR}/Decoder/*.h ${MN_MEDIA_INCLUDE_DIR}/Decoder/*.cpp )

list(APPEND MN_MEDIA_HEADERS ${MN_MEDIA_HEADERS_DECODERS})
list(APPEND MN_MEDIA_SOURCES ${MN_MEDIA_HEADERS_DECODERS})

add_library(${MN_MEDIA_LIB} STATIC ${MN_MEDIA_HEADERS} ${MN_MEDIA_SOURCES})
if(WIN32)
  set(OPENSSL_STATIC_ARTIFACTS_DIR "${MN_MEDIA_ARTIFACTS_DIR}/OpenSSL/${CMAKE_LIBRARY_ARCHITECTURE}/${CMAKE_BUILD_TYPE}MT")
  set_target_properties(${MN_MEDIA_LIB} PROPERTIES CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MT")
  set_target_properties(${MN_MEDIA_LIB} PROPERTIES CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /MTd")
else()
  set(OPENSSL_STATIC_ARTIFACTS_DIR "${MN_MEDIA_ARTIFACTS_DIR}/OpenSSL_${label}/${CMAKE_BUILD_TYPE}")
endif()

add_library(${MN_MEDIA_SHARED_LIB} SHARED ${MN_MEDIA_HEADERS} ${MN_MEDIA_SOURCES})
set_target_properties(${MN_MEDIA_SHARED_LIB} PROPERTIES POSITION_INDEPENDENT_CODE ON)
set_target_properties(${MN_MEDIA_SHARED_LIB} PROPERTIES CXX_VISIBILITY_PRESET hidden)
set_target_properties(${MN_MEDIA_SHARED_LIB} PROPERTIES CMAKE_VISIBILITY_INLINES_HIDDEN 1)


set_target_properties(${MN_MEDIA_LIB} PROPERTIES COMPILE_FLAGS "-D${MN_MEDIA_NO_EXPORT_DEFINE}")

set_property(TARGET ${MN_MEDIA_LIB} ${MN_MEDIA_SHARED_LIB}
  PROPERTY MN_MEDIA_PUBLIC_HEADERS
  ${MN_MEDIA_INCLUDE_DIR}/IO/FileStream.h
  ${MN_MEDIA_INCLUDE_DIR}/IO/IInputStream.h
  ${MN_MEDIA_INCLUDE_DIR}/IO/IObjectInputStream.h
  ${MN_MEDIA_INCLUDE_DIR}/IO/IOutputStream.h
  ${MN_MEDIA_INCLUDE_DIR}/IO/IStream.h
  ${MN_MEDIA_INCLUDE_DIR}/IO/StreamTypes.h
  ${MN_MEDIA_INCLUDE_DIR}/IO/ByteArrayStream.h

  ${MN_MEDIA_INCLUDE_DIR}/Protocol/QADP/QADPAudioFrame.h
  ${MN_MEDIA_INCLUDE_DIR}/Protocol/QADP/QADPAuxiliaryDataFrame.h
  ${MN_MEDIA_INCLUDE_DIR}/Protocol/QADP/QADPFrame.h
  ${MN_MEDIA_INCLUDE_DIR}/Protocol/QADP/QADPFrameSerializer.h
  ${MN_MEDIA_INCLUDE_DIR}/Protocol/QADP/QADPFrameType.h
  ${MN_MEDIA_INCLUDE_DIR}/Protocol/QADP/QADPTextFrame.h
  ${MN_MEDIA_INCLUDE_DIR}/Protocol/QADP/QADPVideoFrame.h
  ${MN_MEDIA_INCLUDE_DIR}/Protocol/QADP/Metadata/QADPAudioConfigurationMetadataPacket.h
  ${MN_MEDIA_INCLUDE_DIR}/Protocol/QADP/Metadata/QADPDriveSerialNumberMetadataPacket.h
  ${MN_MEDIA_INCLUDE_DIR}/Protocol/QADP/Metadata/QADPImageAspectRatioMetadataPacket.h
  ${MN_MEDIA_INCLUDE_DIR}/Protocol/QADP/Metadata/QADPImageEnhancementsMetadataPacket.h
  ${MN_MEDIA_INCLUDE_DIR}/Protocol/QADP/Metadata/QADPImageTransformsMetadataPacket.h
  ${MN_MEDIA_INCLUDE_DIR}/Protocol/QADP/Metadata/QADPLensConfigurationMetadataPacket.h
  ${MN_MEDIA_INCLUDE_DIR}/Protocol/QADP/Metadata/QADPMetadataPacket.h
  ${MN_MEDIA_INCLUDE_DIR}/Protocol/QADP/Metadata/QADPMetadataPacketType.h
  ${MN_MEDIA_INCLUDE_DIR}/Protocol/QADP/Metadata/QADPMetadataPackets.h
  ${MN_MEDIA_INCLUDE_DIR}/Protocol/QADP/Metadata/QADPPrivacyPatchLocation.h
  ${MN_MEDIA_INCLUDE_DIR}/Protocol/QADP/Metadata/QADPPrivacyPatchMetadataPacket.h
  ${MN_MEDIA_INCLUDE_DIR}/Protocol/QADP/Metadata/QADPPrivacyPatchType.h
  ${MN_MEDIA_INCLUDE_DIR}/Protocol/QADP/Metadata/QADPSeprobanMetadataPacket.h
  ${MN_MEDIA_INCLUDE_DIR}/Protocol/QADP/Metadata/QADPStreamChannelBusyStatus.h
  ${MN_MEDIA_INCLUDE_DIR}/Protocol/QADP/Metadata/QADPStreamChannelImageSlicingType.h
  ${MN_MEDIA_INCLUDE_DIR}/Protocol/QADP/Metadata/QADPStreamChannelStatusMetadataPacket.h
  )

target_include_directories(${MN_MEDIA_SHARED_LIB} PUBLIC
  "${CMAKE_CURRENT_SOURCE_DIR}"
  "${CMAKE_SOURCE_DIR}/Logger"
  "${OPENSSL_SHARED_ARTIFACTS_DIR}/include"
  "${CMAKE_BINARY_DIR}/Media")

target_include_directories(${MN_MEDIA_LIB} PUBLIC
  "${CMAKE_CURRENT_SOURCE_DIR}"
  "${CMAKE_SOURCE_DIR}/Logger"
  "${OPENSSL_STATIC_ARTIFACTS_DIR}/include"
  "${CMAKE_BINARY_DIR}/Media")

target_link_directories(${MN_MEDIA_SHARED_LIB} PUBLIC
  "${OPENSSL_SHARED_ARTIFACTS_DIR}/${OPENSSL_LIB_DIR}")

target_link_directories(${MN_MEDIA_LIB} PUBLIC
  "${OPENSSL_STATIC_ARTIFACTS_DIR}/${OPENSSL_LIB_DIR}")

target_sources(${MN_MEDIA_LIB} PUBLIC FILE_SET HEADERS FILES $<TARGET_PROPERTY:MN_MEDIA_PUBLIC_HEADERS>)
target_sources(${MN_MEDIA_SHARED_LIB} PUBLIC FILE_SET HEADERS FILES $<TARGET_PROPERTY:MN_MEDIA_PUBLIC_HEADERS>)
message(STATUS "MN_MEDIA_LIB: ${MN_MEDIA_LIB}")
message(STATUS "FFMPEGWRAP_LIB: ${FFMPEGWRAP_LIB}")
install(TARGETS ${MN_MEDIA_LIB} ${MN_MEDIA_SHARED_LIB}
  FILE_SET HEADERS DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/../${CMAKE_BUILD_TYPE}/include/Media
  ARCHIVE DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/../${CMAKE_BUILD_TYPE}/lib/
  LIBRARY DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/../${CMAKE_BUILD_TYPE}/lib/
  RUNTIME DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/../${CMAKE_BUILD_TYPE}/lib/)

